---
# From https://github.com/crc-org/crc-cloud/blob/main/pkg/bundle/setup/clustersetup.sh#L101
- name: Create crc-dnsmasq.conf
  become: true
  ansible.builtin.copy:
    content: |
      listen-address={{ ansible_default_ipv4.address }}
      expand-hosts
      log-queries
      local=/crc.testing/
      domain=crc.testing
      address=/apps-crc.testing/{{ ansible_default_ipv4.address }}
      address=/api.crc.testing/{{ ansible_default_ipv4.address }}
      address=/api-int.crc.testing/{{ ansible_default_ipv4.address }}
      address=/{{ ansible_fqdn }}.crc.testing/192.168.126.11
    dest: "{{ dnsmasq_conf_path }}"
  register: _dnsmasq_conf

- name: Set this host as first nameserver in /etc/resolv.conf
  become: true
  ansible.builtin.lineinfile:
    path: /etc/resolv.conf
    regexp: '^# Generated by NetworkManager'
    line: "nameserver {{ item }}"
    create: true
  loop: "{{ [ansible_default_ipv4.address] + ansible_facts['dns']['nameservers'] | flatten }}"
  register: _etc_resolv

- name: Disable overwriting /etc/resolv.conf by the NetworkManager
  become: true
  ansible.builtin.copy:
    content: |
      [main]
      dns=none
    dest: /etc/NetworkManager/conf.d/00-custom-crc.conf
  register: _disable_dns_overwrite

- name: Restart NetworkManager when its needed
  when: _disable_dns_overwrite.changed
  become: true
  ansible.builtin.systemd:
    name: NetworkManager
    state: restarted

- name: Restart dnsmasq
  when: _etc_resolv.changed
  become: true
  ansible.builtin.systemd:
    name: dnsmasq
    state: restarted
    enabled: true
