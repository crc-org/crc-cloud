// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resources

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azure-native-sdk/v2/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets a Deployment Stack with a given name.
// Azure REST API version: 2022-08-01-preview.
func LookupDeploymentStackAtSubscription(ctx *pulumi.Context, args *LookupDeploymentStackAtSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupDeploymentStackAtSubscriptionResult, error) {
	opts = utilities.PkgInvokeDefaultOpts(opts)
	var rv LookupDeploymentStackAtSubscriptionResult
	err := ctx.Invoke("azure-native:resources:getDeploymentStackAtSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeploymentStackAtSubscriptionArgs struct {
	// Name of the deployment stack.
	DeploymentStackName string `pulumi:"deploymentStackName"`
}

// Deployment stack object.
type LookupDeploymentStackAtSubscriptionResult struct {
	// Defines the behavior of resources that are not managed immediately after the stack is updated.
	ActionOnUnmanage DeploymentStackPropertiesResponseActionOnUnmanage `pulumi:"actionOnUnmanage"`
	// The debug setting of the deployment.
	DebugSetting *DeploymentStacksDebugSettingResponse `pulumi:"debugSetting"`
	// An array of resources that were deleted during the most recent update.
	DeletedResources []ResourceReferenceResponse `pulumi:"deletedResources"`
	// Defines how resources deployed by the stack are locked.
	DenySettings DenySettingsResponse `pulumi:"denySettings"`
	// The resourceId of the deployment resource created by the deployment stack.
	DeploymentId string `pulumi:"deploymentId"`
	// The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}').
	DeploymentScope *string `pulumi:"deploymentScope"`
	// Deployment stack description.
	Description *string `pulumi:"description"`
	// An array of resources that were detached during the most recent update.
	DetachedResources []ResourceReferenceResponse `pulumi:"detachedResources"`
	// The duration of the deployment stack update.
	Duration string `pulumi:"duration"`
	// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
	Error *ErrorResponseResponse `pulumi:"error"`
	// An array of resources that failed to reach goal state during the most recent update.
	FailedResources []ResourceReferenceExtendedResponse `pulumi:"failedResources"`
	// String Id used to locate any resource on Azure.
	Id string `pulumi:"id"`
	// The location of the deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.
	Location *string `pulumi:"location"`
	// Name of this resource.
	Name string `pulumi:"name"`
	// The outputs of the underlying deployment.
	Outputs interface{} `pulumi:"outputs"`
	// Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
	Parameters interface{} `pulumi:"parameters"`
	// The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
	ParametersLink *DeploymentStacksParametersLinkResponse `pulumi:"parametersLink"`
	// State of the deployment stack.
	ProvisioningState string `pulumi:"provisioningState"`
	// An array of resources currently managed by the deployment stack.
	Resources []ManagedResourceReferenceResponse `pulumi:"resources"`
	// Azure Resource Manager metadata containing createdBy and modifiedBy information.
	SystemData SystemDataResponse `pulumi:"systemData"`
	// Deployment stack resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Type of this resource.
	Type string `pulumi:"type"`
}

func LookupDeploymentStackAtSubscriptionOutput(ctx *pulumi.Context, args LookupDeploymentStackAtSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupDeploymentStackAtSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeploymentStackAtSubscriptionResult, error) {
			args := v.(LookupDeploymentStackAtSubscriptionArgs)
			r, err := LookupDeploymentStackAtSubscription(ctx, &args, opts...)
			var s LookupDeploymentStackAtSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeploymentStackAtSubscriptionResultOutput)
}

type LookupDeploymentStackAtSubscriptionOutputArgs struct {
	// Name of the deployment stack.
	DeploymentStackName pulumi.StringInput `pulumi:"deploymentStackName"`
}

func (LookupDeploymentStackAtSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentStackAtSubscriptionArgs)(nil)).Elem()
}

// Deployment stack object.
type LookupDeploymentStackAtSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupDeploymentStackAtSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentStackAtSubscriptionResult)(nil)).Elem()
}

func (o LookupDeploymentStackAtSubscriptionResultOutput) ToLookupDeploymentStackAtSubscriptionResultOutput() LookupDeploymentStackAtSubscriptionResultOutput {
	return o
}

func (o LookupDeploymentStackAtSubscriptionResultOutput) ToLookupDeploymentStackAtSubscriptionResultOutputWithContext(ctx context.Context) LookupDeploymentStackAtSubscriptionResultOutput {
	return o
}

func (o LookupDeploymentStackAtSubscriptionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDeploymentStackAtSubscriptionResult] {
	return pulumix.Output[LookupDeploymentStackAtSubscriptionResult]{
		OutputState: o.OutputState,
	}
}

// Defines the behavior of resources that are not managed immediately after the stack is updated.
func (o LookupDeploymentStackAtSubscriptionResultOutput) ActionOnUnmanage() DeploymentStackPropertiesResponseActionOnUnmanageOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) DeploymentStackPropertiesResponseActionOnUnmanage {
		return v.ActionOnUnmanage
	}).(DeploymentStackPropertiesResponseActionOnUnmanageOutput)
}

// The debug setting of the deployment.
func (o LookupDeploymentStackAtSubscriptionResultOutput) DebugSetting() DeploymentStacksDebugSettingResponsePtrOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) *DeploymentStacksDebugSettingResponse {
		return v.DebugSetting
	}).(DeploymentStacksDebugSettingResponsePtrOutput)
}

// An array of resources that were deleted during the most recent update.
func (o LookupDeploymentStackAtSubscriptionResultOutput) DeletedResources() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) []ResourceReferenceResponse {
		return v.DeletedResources
	}).(ResourceReferenceResponseArrayOutput)
}

// Defines how resources deployed by the stack are locked.
func (o LookupDeploymentStackAtSubscriptionResultOutput) DenySettings() DenySettingsResponseOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) DenySettingsResponse { return v.DenySettings }).(DenySettingsResponseOutput)
}

// The resourceId of the deployment resource created by the deployment stack.
func (o LookupDeploymentStackAtSubscriptionResultOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) string { return v.DeploymentId }).(pulumi.StringOutput)
}

// The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}').
func (o LookupDeploymentStackAtSubscriptionResultOutput) DeploymentScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) *string { return v.DeploymentScope }).(pulumi.StringPtrOutput)
}

// Deployment stack description.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// An array of resources that were detached during the most recent update.
func (o LookupDeploymentStackAtSubscriptionResultOutput) DetachedResources() ResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) []ResourceReferenceResponse {
		return v.DetachedResources
	}).(ResourceReferenceResponseArrayOutput)
}

// The duration of the deployment stack update.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) string { return v.Duration }).(pulumi.StringOutput)
}

// Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
func (o LookupDeploymentStackAtSubscriptionResultOutput) Error() ErrorResponseResponsePtrOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) *ErrorResponseResponse { return v.Error }).(ErrorResponseResponsePtrOutput)
}

// An array of resources that failed to reach goal state during the most recent update.
func (o LookupDeploymentStackAtSubscriptionResultOutput) FailedResources() ResourceReferenceExtendedResponseArrayOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) []ResourceReferenceExtendedResponse {
		return v.FailedResources
	}).(ResourceReferenceExtendedResponseArrayOutput)
}

// String Id used to locate any resource on Azure.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of this resource.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) string { return v.Name }).(pulumi.StringOutput)
}

// The outputs of the underlying deployment.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Outputs() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) interface{} { return v.Outputs }).(pulumi.AnyOutput)
}

// Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) interface{} { return v.Parameters }).(pulumi.AnyOutput)
}

// The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.
func (o LookupDeploymentStackAtSubscriptionResultOutput) ParametersLink() DeploymentStacksParametersLinkResponsePtrOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) *DeploymentStacksParametersLinkResponse {
		return v.ParametersLink
	}).(DeploymentStacksParametersLinkResponsePtrOutput)
}

// State of the deployment stack.
func (o LookupDeploymentStackAtSubscriptionResultOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// An array of resources currently managed by the deployment stack.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Resources() ManagedResourceReferenceResponseArrayOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) []ManagedResourceReferenceResponse {
		return v.Resources
	}).(ManagedResourceReferenceResponseArrayOutput)
}

// Azure Resource Manager metadata containing createdBy and modifiedBy information.
func (o LookupDeploymentStackAtSubscriptionResultOutput) SystemData() SystemDataResponseOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) SystemDataResponse { return v.SystemData }).(SystemDataResponseOutput)
}

// Deployment stack resource tags.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Type of this resource.
func (o LookupDeploymentStackAtSubscriptionResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentStackAtSubscriptionResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeploymentStackAtSubscriptionResultOutput{})
}
